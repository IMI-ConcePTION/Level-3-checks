mydt$flowchart<-"M"
mydt_M<-rbind(mydt_M, mydt[mydt$flowchart=="M"])
mydt<-mydt[(mydt$flowchart!="M"),]
if((((nrow(mydt)+nrow(mydt_C)+nrow(mydt_B)+nrow(mydt_T)+nrow(mydt_N)+nrow(mydt_A)+nrow(mydt_R)+nrow(mydt_O)+nrow(mydt_I)+nrow(mydt_M)))!= OG_length)==T){print("LENGTH ERROR")}
# Notes:
#   Then need to output group M cases as individual case lists with text description of anomalies as well
# as codes plus variables: ID no, registry, year of birth, type of birth, twin, GA, BW, karyotype
# (including written text), postmortem examination, when discovered
# For the website review of potential multiple cases, a subgroup for "poorly specified cases" has to be
# added (could go to group X
#
#logical checks for group M
check_length<-vector(length=nrow(mydt_M))
for (i in 1:nrow(mydt_M)){
myvars<-as.matrix(mydt_M[i,c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")])
myvars<-myvars[myvars!=""]
check_length[i]<-(length(myvars))
}
all(check_length>1)
#VJOLA and MARIA advise on further checks
mydt_flowchart<-rbind(mydt, mydt_A, mydt_B, mydt_C, mydt_I, mydt_M, mydt_N,
mydt_O, mydt_R, mydt_T)
if(nrow(mydt_flowchart)==OG_length){print("Length Check OK")}
check_length<-vector(length=nrow(mydt_flowchart))
for (i in 1:nrow(mydt_flowchart)){
myvars<-as.matrix(mydt_flowchart[i,c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")])
myvars<-myvars[myvars!=""]
check_length[i]<-(length(myvars))
}
table(check_length[mydt_flowchart$flowchart=="A"])
table(check_length[mydt_flowchart$flowchart=="B"])
table(check_length[mydt_flowchart$flowchart=="C"])
table(check_length[mydt_flowchart$flowchart=="T"])
table(check_length[mydt_flowchart$flowchart=="O"])
table(check_length[mydt_flowchart$flowchart=="M"])
table(check_length[mydt_flowchart$flowchart=="N"])
table(check_length[mydt_flowchart$flowchart=="R"])
table(check_length[mydt_flowchart$flowchart=="I"])
#Vjola 21/6 Q codes or ICD10, different datasets will use different systems
#-->add IDC9 numbers to case selection
barplot(table(mydt_flowchart$flowchart), col=rainbow(9), main='flowchart classification', cex.main=2)
#group checks
A<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="A",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",
"malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(A))
B<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="B",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",
"malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(B))
C<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="C",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",
"malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(C))
I<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="I",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",
"malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(I))
M<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="M",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",
"malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(M))
N<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="N",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",
"malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(N))
O<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="O",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",                                          "malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(O))
R<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="R",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",
"malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(R))
T<-(as.matrix(mydt_flowchart[mydt_flowchart$flowchart=="T",c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4",
"malfo5", "malfo6", "malfo7","malfo8","flowchart")]))
table(as.vector(T))
mydt_flowchart<-unique(mydt_flowchart)
write.csv(mydt_flowchart, paste0(path, "mydt_flowchart.csv"))
mydt_files<-ls(pattern="mydt")
rm(list=mydt_files)
path_dir
mydt<-fread (file=(paste0(path_dir, "EUROCAT).csv"))
mydt<-fread (file=(paste0(path_dir, "EUROCAT).csv")))
mydt<-fread (file=(paste0(path_dir, "EUROCAT.csv")))
path
dir_base
projectFolder<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(projectFolder)
dir_base<-getwd()
dir_base
StudyName <- "ConcePTION"
path_dir<-paste0(dir_base,"/CDMInstances/",StudyName,"/")
path<-path_dir
#Set the path to where you want your report to be saved(make sure that the output folder already exists)
output_dir<-paste0(projectFolder,"/g_output/")
path_output<-output_dir
pre_dir<-paste0(projectFolder,"/p_steps/")
g_intermediate<-paste0(projectFolder,"/g_intermediate/")
tmp<-paste0(g_intermediate,"tmp/")
populations_dir<-paste0(g_intermediate,"populations/")
eurocat_dir<-paste0(output_dir,"EUROCAT/")
mydt<-data.table::fread (file=(paste0(path, "mydt_flowchart.csv")))
mydt_flowchart <- read.csv("~/GitHub/conception/CDMInstances/ConcePTION/mydt_flowchart.csv")
View(mydt_flowchart)
myst<-mydt_flowchart
mydt<-mydt_flowchart
rm(myst)
mydt<-data.table::fread (file=(paste0(path, "mydt_flowchart.csv")))
# colnames(mydt)
#what syndrome codes are in the data?
#EUROCAT codes aren't only in syndrome, but also the malfo variables... more complicated
all_codes<-unique(c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7,mydt$malfo8))
####################################
#define each of the EUROCAT indicators
name_ind_0<-"number of cases"
#pregnancies or babies/fetuses? Discussed with Carlos, decided pregnancies
ind_0<-"length(unique(mydt$numloc))"
# Total congenital anomaly prevalence D215, D821, D1810, P350, P351, P371, 74, 75, 27910, 2281, 76076, 76280, 7710, 7711, 77121
name_ind_1<-"Total congenital anomaly prevalence"
ind_1<-c("D215", "D821", "D1810", "P350", "P351", "P371", "74", "75", "27910", "2281", "76076", "76280", "7710", "7711", "77121")
#what syndome codes==ancephalus? PG 92 & 101 EUROCAT
name_ind_2<-"Prevalence of anencephalus"
ind_2<-c("Q00", "740", "Q891")
#what syndome codes==cardiac defect? PG 98 & 106 EUROCAT
name_ind_3<-"Prevalence of severe cardiac defects"
ind_3<-c("Q202","Q203","Q204", "Q205", "Q206", "Q211", "Q213", "Q226", "Q234","Q248","Q249", "Q250", "Q26","745", "746", "7470","7471", "7472","7473","7474")
#Includes codes for corpus callosum anomalies (Q040), cataract (Q120), coarctation of aorta (Q251), Hirschprung's disease (Q431) and craniosynostosis (Q750).
name_ind_4<- "Prevalence of selected postnatal diagnosis"
ind_4<-c("Q040", "Q120", "Q251", "Q431", "Q750")
# Prevalence of genetic syndromes and microdeletions, page 96 table EUROCAT
name_ind_5<- "Prevalence genetic syndromes and microdeletions"
ind_5<-c("Q4471", "Q6190", "Q7484", "Q751", "Q754", "Q7581", "Q87", "Q936", "D821", "75581", "75601", "75604", "7598", "27910")
#fetal death is mydt$type= 2 or 3 or 4
#1= Live birth, 2 = Stillbirth, 3 = Spontaneous abortion, 4 = TOPFA, 9 = Not known
# name_ind_6<-"Prevalence of malformed fetal deaths"
#definition of "malformed"? Having any diagnoses in "syndrome"?
# ind_6<-fetaldeath[(fetaldeath$syndrome!=""),]
#OR number malformed>1 ?
#check with Vjola- inconsistency between malformation definition
#slightly different results
name_ind_6<-"Prevalence of malformed fetal deaths"
mydt$fetaldeath[mydt$type==1]<-0
mydt$fetaldeath[mydt$type==2]<-1
mydt$fetaldeath[mydt$type==3]<-1
mydt$fetaldeath[mydt$type==4]<-1
mydt$fetaldeath[mydt$type==9]<-NA
table(mydt$fetaldeath)
ind_6<-"mydt$nbrmalf, mydt$type"
name_ind_7<-"Down Syndrome"
#EUROCAT pg96 says codes== Q90 and 7580 ---BUT the sp_syndrome variable shows Q909 coded as Down Syndrom and Trisomy 21 (Valencia coding error?)
#SOLUTION# Vjola 31.5 - use all codes starting with Q90x
# 3.5 Detailed Congenital Anomaly Coding Guideline pg 103
ind_7<-c(all_codes[(startsWith(all_codes, "Q90"))], "7580")
#further calculations for Down
# Down syndrome: Observed/Expected ratio by maternal age
# This calculates the ratio of Observed to Expected Down Syndrome cases. Observed (O) is the
# number of livebirth (LB) + fetal death (FD) ???20 weeks gestational age + the number of TOPFA
# corrected for probability of fetal survival to 20 weeks.
# The calculation is:
#   O = LB + FD + (TOPFA corrected to 20 weeks gestational age)
# Expected (E) is based on EUROCAT average 5 year maternal age-specific estimates (LB +FD + TOPFA corrected to 20 weeks)
# for the time period of analysis applied to the maternal age
# profile of each registry birth population.
# this method (for loop finding the indicator codes anywhere in the data) creates a binary variable for each indicator, so the dataset can be subset
# and analyzed for any of them (and overlaps) without writing new files or storing data.frames in R
# BUT IT IS PRETTY SLOW- FOR THIS RELETIVELY SMALL DATASET, IT TAKES 2:45 MINUTES
# BUT ALSO, IT ONLY NEEDS TO BE RUN ONCE PER DATASET
#cases defined as pregnancies
prev_ind_0<-length(unique(mydt$numloc))
#cases defined as individual fetuses/babies--> 1-5 singletons to quintuplets, but 6, 7, 8 and 9 are unspecified.
# table(mydt$nbrbaby)
mydt$ind_1<-0
mydt[,mydt$sex==2]
mydt[mydt$sex==2,]
mydt[any(mydt$syndrome%in%ind1)==T,]
name_ind_0<-"number of cases"
#pregnancies or babies/fetuses? Discussed with Carlos, decided pregnancies
ind_0<-"length(unique(mydt$numloc))"
# Total congenital anomaly prevalence D215, D821, D1810, P350, P351, P371, 74, 75, 27910, 2281, 76076, 76280, 7710, 7711, 77121
name_ind_1<-"Total congenital anomaly prevalence"
ind_1<-c("D215", "D821", "D1810", "P350", "P351", "P371", "74", "75", "27910", "2281", "76076", "76280", "7710", "7711", "77121")
#what syndome codes==ancephalus? PG 92 & 101 EUROCAT
name_ind_2<-"Prevalence of anencephalus"
ind_2<-c("Q00", "740", "Q891")
#what syndome codes==cardiac defect? PG 98 & 106 EUROCAT
name_ind_3<-"Prevalence of severe cardiac defects"
ind_3<-c("Q202","Q203","Q204", "Q205", "Q206", "Q211", "Q213", "Q226", "Q234","Q248","Q249", "Q250", "Q26","745", "746", "7470","7471", "7472","7473","7474")
#Includes codes for corpus callosum anomalies (Q040), cataract (Q120), coarctation of aorta (Q251), Hirschprung's disease (Q431) and craniosynostosis (Q750).
name_ind_4<- "Prevalence of selected postnatal diagnosis"
ind_4<-c("Q040", "Q120", "Q251", "Q431", "Q750")
# Prevalence of genetic syndromes and microdeletions, page 96 table EUROCAT
name_ind_5<- "Prevalence genetic syndromes and microdeletions"
ind_5<-c("Q4471", "Q6190", "Q7484", "Q751", "Q754", "Q7581", "Q87", "Q936", "D821", "75581", "75601", "75604", "7598", "27910")
#fetal death is mydt$type= 2 or 3 or 4
#1= Live birth, 2 = Stillbirth, 3 = Spontaneous abortion, 4 = TOPFA, 9 = Not known
# name_ind_6<-"Prevalence of malformed fetal deaths"
#definition of "malformed"? Having any diagnoses in "syndrome"?
# ind_6<-fetaldeath[(fetaldeath$syndrome!=""),]
#OR number malformed>1 ?
#check with Vjola- inconsistency between malformation definition
#slightly different results
name_ind_6<-"Prevalence of malformed fetal deaths"
mydt$fetaldeath[mydt$type==1]<-0
mydt$fetaldeath[mydt$type==2]<-1
mydt$fetaldeath[mydt$type==3]<-1
mydt$fetaldeath[mydt$type==4]<-1
mydt$fetaldeath[mydt$type==9]<-NA
table(mydt$fetaldeath)
ind_6<-"mydt$nbrmalf, mydt$type"
name_ind_7<-"Down Syndrome"
#EUROCAT pg96 says codes== Q90 and 7580 ---BUT the sp_syndrome variable shows Q909 coded as Down Syndrom and Trisomy 21 (Valencia coding error?)
#SOLUTION# Vjola 31.5 - use all codes starting with Q90x
# 3.5 Detailed Congenital Anomaly Coding Guideline pg 103
ind_7<-c(all_codes[(startsWith(all_codes, "Q90"))], "7580")
#further calculations for Down
# Down syndrome: Observed/Expected ratio by maternal age
# This calculates the ratio of Observed to Expected Down Syndrome cases. Observed (O) is the
# number of livebirth (LB) + fetal death (FD) ???20 weeks gestational age + the number of TOPFA
# corrected for probability of fetal survival to 20 weeks.
# The calculation is:
#   O = LB + FD + (TOPFA corrected to 20 weeks gestational age)
# Expected (E) is based on EUROCAT average 5 year maternal age-specific estimates (LB +FD + TOPFA corrected to 20 weeks)
# for the time period of analysis applied to the maternal age
# profile of each registry birth population.
# this method (for loop finding the indicator codes anywhere in the data) creates a binary variable for each indicator, so the dataset can be subset
# and analyzed for any of them (and overlaps) without writing new files or storing data.frames in R
mydt[any(mydt$syndrome%in%ind1)==T,]
ind1
mydt[any(mydt$syndrome%in%ind_1)==T,]
mydt[any(c(mydt$syndrome, mydt$malfo1)%in%ind_1)==T,]
mydt[any(c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7, mydt$malfo8)%in%ind_1)==T,]
mydt[any(c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7, mydt$malfo8)%in%ind_1)==T,]<-1
prev_ind_1<-sum(mydt$ind_1)
for(i in 1:nrow(mydt)){
if(any(mydt[i,c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")]%in%ind_1)==T) {mydt$ind_1[i]<-1} else {mydt$ind_1[i]<-0}}
prev_ind_1<-table(mydt$ind_1)[2]
table(mydt$ind_1)
ind_1
c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7, mydt$malfo8)%in%ind_1
for(i in 1:nrow(mydt)){
if(any(mydt[i,c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")]%in%ind_2)==T) {mydt$ind_2[i]<-1} else {mydt$ind_2[i]<-0}}
prev_ind_2<-table(mydt$ind_2)[2]
table(mydt$ind_2)
mydt$all_malfo<-paste0(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7, mydt$malfo8)
mydt$all_malfo[1]
mydt$all_malfo[4]
View(mydt)
View(mydt_flowchart)
mydt<-mydt_flowchart
View(mydt_flowchart)
View(mydt)
all_codes<-unique(c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7,mydt$malfo8))
mydt$all_malfo<-paste0(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7, mydt$malfo8)
mydt$all_malfo[4]
Q21%in%mydt$all_malfo[4]
"Q21"%in%mydt$all_malfo[4]
"Q210"%in%mydt$all_malfo[4]
"Q210"%like%mydt$all_malfo[4]
name_ind_0<-"number of cases"
all_malfo[4]
mydt$all_malfo[4]
grep("Q210",mydt$all_malfo)
grep(ind_1,mydt$all_malfo)
grep(any(ind_1),mydt$all_malfo)
"Q210"%v%mydt$all_malfo[4]
"Q210"%>%mydt$all_malfo[4]
"Q210"%<%mydt$all_malfo[4]
library(dplyr)
"Q210"%<%mydt$all_malfo[4]
"Q210"%>%mydt$all_malfo[4]
for(i in 1:nrow(mydt)){
if(any(mydt[i,c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")]%in%ind_1)==T) {mydt$ind_1[i]<-1} else {mydt$ind_1[i]<-0}}
prev_ind_1<-table(mydt$ind_1)[2]
table(mydt$ind_1)[2]
table(mydt$ind_1)
mydt$all_malfo%in%ind_1
grep(mydt$all_malfo, ind_1[1])
ind_1[1]
(mydt$all_malfo %>% ind_1[1])
( ind_1[1]%>% mydt$all_malfo)
grep(ind_1[1],mydt$all_malfo)
grep1(ind_1[1],mydt$all_malfo)
grepl(ind_1[1],mydt$all_malfo)
table(grepl(ind_1[1],mydt$all_malfo))
ind_1[1]%in%mydt$all_malfo
mydt$all_malfo
table(grepl(ind_1[2],mydt$all_malfo))
table(grepl(ind_1[3],mydt$all_malfo))
mydt$ind_1<-0
mydt$ind_1[,(grepl(ind_1[3],mydt$all_malfo))]
mydt$ind_1[(grepl(ind_1[3],mydt$all_malfo)),]
mydt[(grepl(ind_1[3],mydt$all_malfo)),]
mydt[(grepl(ind_1[3],mydt$all_malfo)),mydt$ind_1]
mydt[(grepl(ind_1[3],mydt$all_malfo)),mydt$ind_1]<-1
row.names(mydt[(grepl(ind_1[3],mydt$all_malfo)),])
mydt$ind_1[(grepl(ind_1[3],mydt$all_malfo)),]
mydt$ind_1[(grepl(ind_1[3],mydt$all_malfo))]
mydt$ind_1[(grepl(ind_1[3],mydt$all_malfo))]<-1
mydt$ind_1<-0
for(i in 1:length(ind_1)){
mydt$ind_1[(grepl(ind_1[i],mydt$all_malfo))]<-1
}
sum(mydt$ind_1)
View(mydt)
ind_1
mydt$ind_1[(grepl(ind_1[3],c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")))]
(grepl(ind_1[3],c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")))
(grepl(ind_1[3],mydt[,c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")]))
mydt[,c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")]
mydt$malfo1%in%ind_1
table(mydt$malfo1%in%ind_1)
table(mydt$malfo2%in%ind_1)
table(mydt$malfo3%in%ind_1)
table(mydt$malfo4%in%ind_1)
table(mydt$malfo5%in%ind_1)
table(mydt$malfo6%in%ind_1)
table(mydt$malfo7%in%ind_1)
table(mydt$malfo8%in%ind_1)
table(mydt$syndrome%in%ind_1)
mydt$syndrome[(mydt$syndrome%in%ind_1)]
ind_1
my_malfo_vars<-c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")
mydt[,my_malfo_vars[1]]
mydt$my_malfo_vars[1]
mydt[,my_malfo_vars[1]]
my_malfo_vars
mydt[my_malfo_vars[1]]
library(dplyr)
select(mydt, my_malfo_vars[1])
my_malfo_vars[1]
mydt[,my_malfo_vars[1]]
mydt[,my_malfo_vars[1]]%in%ind_1
table(mydt[,my_malfo_vars[1]]%in%ind_1)
mydt[,my_malfo_vars[1]]%in%ind_1]
(mydt[,my_malfo_vars[1]]%in%ind_1)
mydt$ind_1[(mydt[,my_malfo_vars[1]]%in%ind_1)]
mydt$ind_1<-0
for(i in 1:length(my_malfo_vars)){
mydt$ind_1[(mydt[,my_malfo_vars[i]]%in%ind_1)]<-1
}
mydt$ind_1
sum(mydt$ind_1)
for(i in 1:length(my_malfo_vars)){
mydt$ind_2[(mydt[,my_malfo_vars[i]]%in%ind_2)]<-1
}
prev_ind_2<-sum(mydt$ind_2)
prev_ind_2
mydt$ind_2<-0
prev_ind_2<-sum(mydt$ind_2)
prev_ind_2
for(i in 1:length(my_malfo_vars)){
mydt$ind_2[(mydt[,my_malfo_vars[i]]%in%ind_2)]<-1
}
table(mydt$ind_2)
prev_ind_2<-sum(mydt$ind_2)
ind_2
mydt[,mydt$ind_2==1]
mydt[,(mydt$ind_2==1)]
mydt$ind_2<-0
for(i in 1:nrow(mydt)){
if(any(mydt[i,c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")]%in%ind_2)==T) {mydt$ind_2[i]<-1} else {mydt$ind_2[i]<-0}}
prev_ind_2<-table(mydt$ind_2)[2]
table(mydt$ind_2)
for(i in 1:length(my_malfo_vars)){
mydt$ind_2[(mydt[,my_malfo_vars[i]]%in%ind_2)]<-1
}
table(mydt$ind_2)
mydt[,mydt$ind_2==0]
mydt[mydt$ind_2==0,]
mydt[mydt$ind_2==1,]
ind_2
path_output
#DQI ascertainment (items 0-7)
#SETUP#
library(data.table)
library(dplyr)
mydt<-data.table::fread (file=(paste0(path, "mydt_flowchart.csv")))
# colnames(mydt)
#what syndrome codes are in the data?
#EUROCAT codes aren't only in syndrome, but also the malfo variables... more complicated
all_codes<-unique(c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7,mydt$malfo8))
my_malfo_vars<-c("syndrome", "malfo1", "malfo2", "malfo3", "malfo4", "malfo5", "malfo6", "malfo7","malfo8")
####################################
#define each of the EUROCAT indicators
name_ind_0<-"number of cases"
#pregnancies or babies/fetuses? Discussed with Carlos, decided pregnancies
ind_0<-"length(unique(mydt$numloc))"
# Total congenital anomaly prevalence D215, D821, D1810, P350, P351, P371, 74, 75, 27910, 2281, 76076, 76280, 7710, 7711, 77121
name_ind_1<-"Total congenital anomaly prevalence"
ind_1<-c("D215", "D821", "D1810", "P350", "P351", "P371", "74", "75", "27910", "2281", "76076", "76280", "7710", "7711", "77121")
#what syndome codes==ancephalus? PG 92 & 101 EUROCAT
name_ind_2<-"Prevalence of anencephalus"
ind_2<-c("Q00", "740", "Q891")
#what syndome codes==cardiac defect? PG 98 & 106 EUROCAT
name_ind_3<-"Prevalence of severe cardiac defects"
ind_3<-c("Q202","Q203","Q204", "Q205", "Q206", "Q211", "Q213", "Q226", "Q234","Q248","Q249", "Q250", "Q26","745", "746", "7470","7471", "7472","7473","7474")
#Includes codes for corpus callosum anomalies (Q040), cataract (Q120), coarctation of aorta (Q251), Hirschprung's disease (Q431) and craniosynostosis (Q750).
name_ind_4<- "Prevalence of selected postnatal diagnosis"
ind_4<-c("Q040", "Q120", "Q251", "Q431", "Q750")
# Prevalence of genetic syndromes and microdeletions, page 96 table EUROCAT
name_ind_5<- "Prevalence genetic syndromes and microdeletions"
ind_5<-c("Q4471", "Q6190", "Q7484", "Q751", "Q754", "Q7581", "Q87", "Q936", "D821", "75581", "75601", "75604", "7598", "27910")
#fetal death is mydt$type= 2 or 3 or 4
#1= Live birth, 2 = Stillbirth, 3 = Spontaneous abortion, 4 = TOPFA, 9 = Not known
# name_ind_6<-"Prevalence of malformed fetal deaths"
#definition of "malformed"? Having any diagnoses in "syndrome"?
# ind_6<-fetaldeath[(fetaldeath$syndrome!=""),]
#OR number malformed>1 ?
#check with Vjola- inconsistency between malformation definition
#slightly different results
name_ind_6<-"Prevalence of malformed fetal deaths"
mydt$fetaldeath[mydt$type==1]<-0
mydt$fetaldeath[mydt$type==2]<-1
mydt$fetaldeath[mydt$type==3]<-1
mydt$fetaldeath[mydt$type==4]<-1
mydt$fetaldeath[mydt$type==9]<-NA
table(mydt$fetaldeath)
ind_6<-"mydt$nbrmalf, mydt$type"
name_ind_7<-"Down Syndrome"
#EUROCAT pg96 says codes== Q90 and 7580 ---BUT the sp_syndrome variable shows Q909 coded as Down Syndrom and Trisomy 21 (Valencia coding error?)
#SOLUTION# Vjola 31.5 - use all codes starting with Q90x
# 3.5 Detailed Congenital Anomaly Coding Guideline pg 103
ind_7<-c(all_codes[(startsWith(all_codes, "Q90"))], "7580")
#further calculations for Down
# Down syndrome: Observed/Expected ratio by maternal age
# This calculates the ratio of Observed to Expected Down Syndrome cases. Observed (O) is the
# number of livebirth (LB) + fetal death (FD) ???20 weeks gestational age + the number of TOPFA
# corrected for probability of fetal survival to 20 weeks.
# The calculation is:
#   O = LB + FD + (TOPFA corrected to 20 weeks gestational age)
# Expected (E) is based on EUROCAT average 5 year maternal age-specific estimates (LB +FD + TOPFA corrected to 20 weeks)
# for the time period of analysis applied to the maternal age
# profile of each registry birth population.
# this method (for loop finding the indicator codes anywhere in the data) creates a binary variable for each indicator, so the dataset can be subset
# and analyzed for any of them (and overlaps) without writing new files or storing data.frames in R
# BUT IT IS PRETTY SLOW- FOR THIS RELETIVELY SMALL DATASET, IT TAKES 2:45 MINUTES
# BUT ALSO, IT ONLY NEEDS TO BE RUN ONCE PER DATASET
#cases defined as pregnancies
prev_ind_0<-length(unique(mydt$numloc))
#cases defined as individual fetuses/babies--> 1-5 singletons to quintuplets, but 6, 7, 8 and 9 are unspecified.
# table(mydt$nbrbaby)
mydt$ind_1<-0
for(i in 1:length(my_malfo_vars)){
mydt$ind_1[(mydt[,my_malfo_vars[i]]%in%ind_1)]<-1
}
prev_ind_1<-sum(mydt$ind_1)
###########################################################
mydt$ind_2<-0
for(i in 1:length(my_malfo_vars)){
mydt$ind_2[(mydt[,my_malfo_vars[i]]%in%ind_2)]<-1
}
prev_ind_2<-sum(mydt$ind_2)
###########################################################
mydt$ind_3<-0
for(i in 1:length(my_malfo_vars)){
mydt$ind_3[(mydt[,my_malfo_vars[i]]%in%ind_3)]<-1
}
prev_ind_3<-sum(mydt$ind_3)
###########################################################
mydt$ind_4<-0
for(i in 1:length(my_malfo_vars)){
mydt$ind_4[(mydt[,my_malfo_vars[i]]%in%ind_4)]<-1
}
prev_ind_4<-sum(mydt$ind_4)
###########################################################
mydt$ind_5<-0
for(i in 1:length(my_malfo_vars)){
mydt$ind_5[(mydt[,my_malfo_vars[i]]%in%ind_5)]<-1
}
prev_ind_5<-sum(mydt$ind_5)
##########################################################
mydt$ind_6<-0
mydt$ind_6[(mydt$fetaldeath==1)&(mydt$nbrmalf>=1)]<-1
prev_ind_6<-sum(mydt$ind_6)
###########################################################
mydt$ind_7<-0
for(i in 1:length(my_malfo_vars)){
mydt$ind_7[(mydt[,my_malfo_vars[i]]%in%ind_7)]<-1
}
prev_ind_7<-sum(mydt$ind_7)
# export indicator data
names_asc<-c(name_ind_0, name_ind_1, name_ind_2, name_ind_3, name_ind_4, name_ind_5, name_ind_6, name_ind_7)
raw_asc<-c((prev_ind_0),(prev_ind_1), (prev_ind_2), (prev_ind_3), (prev_ind_4), (prev_ind_5), (prev_ind_6), (prev_ind_7))
raw_asc_prev<-round((raw_asc/prev_ind_0),4)
ci<-list()
for (i in 1:length(raw_asc)) {
ci[[i]] <- binom.test(x = raw_asc[i], n = prev_ind_0, p=(raw_asc[i]/prev_ind_0) )
}
ci<-sapply(ci, function(x) unclass(x$conf.int))
ci<-round(ci, 4)
ci_asc<-vector()
for(i in 1:ncol(ci)){
ci_asc[i]<- paste0(ci[1,i],"-", ci[2,i])
}
asc_tab<-cbind(names_asc,raw_asc, raw_asc_prev, ci_asc)
colnames(asc_tab)<-c("Indicator", "Total", "Prevalence", "95% CI")
write.csv(asc_tab,paste0(path_output,"EUROCAT/ascertainment.csv"), row.names = F)
asc_tab
ind_7
name_ind_7<-"Down Syndrome"
#EUROCAT pg96 says codes== Q90 and 7580 ---BUT the sp_syndrome variable shows Q909 coded as Down Syndrom and Trisomy 21 (Valencia coding error?)
#SOLUTION# Vjola 31.5 - use all codes starting with Q90x
# 3.5 Detailed Congenital Anomaly Coding Guideline pg 103
ind_7<-c(all_codes[(startsWith(all_codes, "Q90"))], "7580")
ind_7
all_codes
all_codes<-unique(c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7,mydt$malfo8))
all_codes
mydt$syndrome
all_codes<-(c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7,mydt$malfo8))
all_codes
View(mydt)
all_codes<-unique(c(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7,mydt$malfo8))
all_codes
mydt$syndrome
unique(mydt$syndrome)
all_codes<-(c(unique(mydt$syndrome), unique(mydt$malfo1), unique(mydt$malfo2), unique(mydt$malfo3), unique(mydt$malfo4), unique(mydt$malfo5), unique(mydt$malfo6), unique(mydt$malfo7), unique(mydt$malfo8)))
all_codes
all_codes<-(rbind(mydt$syndrome, mydt$malfo1, mydt$malfo2, mydt$malfo3, mydt$malfo4, mydt$malfo5, mydt$malfo6, mydt$malfo7,mydt$malfo8))
all_codes
