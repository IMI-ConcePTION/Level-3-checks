report_dir2 <- paste0(std_source_pop_dir,i,"/Masked")
}else{
report_dir1 <- substr(std_source_pop_dir,1,nchar(std_source_pop_dir)-1)
report_dir2 <- paste0(std_source_pop_dir,"Masked")
}
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_start_follow_up.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_start_follow_up_PLOT.rds"))
if(nrow(TEMP) > 0) {
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
TEMP[, start_follow_up_month := as.numeric(start_follow_up_month) ]
setnames(TEMP,"start_follow_up_year","Year")
ggplotly(ggplot(TEMP, aes(x = start_follow_up_month, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
#scale_x_continuous(breaks = unique(TEMP[["start_follow_up_month"]]), labels = as.character(unique(TEMP[["start_follow_up_month"]])))
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
)
}
rm(TEMP)
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_op_start_date.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_op_start_date_PLOT.rds"))
if(nrow(TEMP) > 0) {
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
TEMP[, op_start_date := as.numeric(op_start_date) ]
setnames(TEMP,"op_start_date_year","Year")
ggplotly(ggplot(TEMP, aes(x = op_start_date, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
)
}
View(TEMP)
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_op_start_date.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_op_start_date_PLOT.rds"))
if(nrow(TEMP) > 0) {
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
TEMP[, op_start_date_month := as.numeric(op_start_date) ]
setnames(TEMP,"op_start_date_year","Year")
ggplotly(ggplot(TEMP, aes(x = op_start_date, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
)
}
TEMP[, op_start_date_month := as.numeric(op_start_date) ]
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_op_start_date.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_op_start_date_PLOT.rds"))
if(nrow(TEMP) > 0) {
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
TEMP[, op_start_date_month := as.numeric(op_start_date_month) ]
setnames(TEMP,"op_start_date_year","Year")
ggplotly(ggplot(TEMP, aes(x = op_start_date, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
)
}
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_op_start_date.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_op_start_date_PLOT.rds"))
if(nrow(TEMP) > 0) {
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
TEMP[, op_start_date_month := as.numeric(op_start_date_month) ]
setnames(TEMP,"op_start_date_year","Year")
ggplotly(ggplot(TEMP, aes(x = op_start_date, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
)
}
TEMP[, op_start_date_month := as.numeric(op_start_date_month) ]
setnames(TEMP,"op_start_date_year","Year")
View(TEMP)
ggplotly(ggplot(TEMP, aes(x = op_start_date, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
)
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_op_start_date.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_op_start_date_PLOT.rds"))
if(nrow(TEMP) > 0) {
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
TEMP[, op_start_date_month := as.numeric(op_start_date_month) ]
setnames(TEMP,"op_start_date_year","Year")
ggplotly(ggplot(TEMP, aes(x = op_start_date_month, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
)
}
rm(TEMP)
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_end_follow_up.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_end_follow_up_PLOT.rds"))
if(nrow(TEMP) > 0) {
TEMP[, end_follow_up_month := as.numeric(end_follow_up_month) ]
setnames(TEMP,"end_follow_up_year","Year")
ggplotly(ggplot(TEMP, aes(x = end_follow_up_month, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
#scale_x_continuous(breaks = unique(TEMP[["start_follow_up_month"]]), labels = as.character(unique(TEMP[["start_follow_up_month"]])))
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
#scale_y_continuous(limits = c(0,1.1*max(TEMP1[["PY"]])))
)
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
}
#rm(TEMP)
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_op_end_date.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_op_end_date_PLOT.rds"))
if(nrow(TEMP) > 0) {
TEMP[, end_follow_up_month := as.numeric(op_end_date_month) ]
setnames(TEMP,"op_end_date_year","Year")
ggplotly(ggplot(TEMP, aes(x = op_end_date_month, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
#scale_x_continuous(breaks = unique(TEMP[["start_follow_up_month"]]), labels = as.character(unique(TEMP[["start_follow_up_month"]])))
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
#scale_y_continuous(limits = c(0,1.1*max(TEMP1[["PY"]])))
)
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
}
View(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_op_end_date_PLOT.rds"))
TEMP[, end_follow_up_month := as.numeric(op_end_date_month) ]
setnames(TEMP,"op_end_date_year","Year")
ggplotly(ggplot(TEMP, aes(x = op_end_date_month, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
#scale_x_continuous(breaks = unique(TEMP[["start_follow_up_month"]]), labels = as.character(unique(TEMP[["start_follow_up_month"]])))
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
#scale_y_continuous(limits = c(0,1.1*max(TEMP1[["PY"]])))
)
TEMP <- fread(paste0(report_dir2,"/",i,"_R_01_0608_DT_op_end_date.csv"), sep = ";")
datatable(TEMP, options = list(scrollX=T),rownames = F)
rm(TEMP)
TEMP <- readRDS(paste0(report_dir1,"/",i,"_R_01_0608_DT_op_end_date_PLOT.rds"))
if(nrow(TEMP) > 0) {
TEMP[, op_end_date_month := as.numeric(op_end_date_month) ]
setnames(TEMP,"op_end_date_year","Year")
ggplotly(ggplot(TEMP, aes(x = op_end_date_month, y = count, group = Year)) +
geom_line(aes(color = Year)) +
geom_point(aes(color = Year)) +
#facet_wrap(~ meaning, ncol=2, scales = "fixed") +
ggtitle("") +
xlab("Month") +
ylab("Count")+
theme_classic() +
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(text=element_text(size = 10),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.title.x = element_text(colour = "#76b82a"),
axis.title.y = element_text(colour = "#76b82a"),
plot.title = element_text(colour = "#76b82a"),
strip.text.y = element_text(angle = 0),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 7)) +
#scale_x_continuous(breaks = unique(TEMP[["start_follow_up_month"]]), labels = as.character(unique(TEMP[["start_follow_up_month"]])))
scale_x_continuous(breaks = c(1:12), labels = as.character(c(1:12)))
#scale_y_continuous(limits = c(0,1.1*max(TEMP1[["PY"]])))
)
#par(mar = c(3,3,1,4),mgp = c(2,1,0), oma = c(1,1,1,1), xpd = T)
#Line_plot2(
#MATRIX = TEMP,
#title = "",
#x.l = "Month",
#y.l = "Count"
#)
}
#rm(TEMP)
rm(list=ls())
if(!require(rstudioapi)){install.packages("rstudioapi")}
library(rstudioapi)
projectFolder<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(projectFolder)
########################################################################################################################
#Specify all meanings that refer to birth registry in the SURVEY_ID table(if applicable) for identifying pregnancy
########################################################################################################################
#example meanings_birth_registry<-c("birth_registry", "birth_registry_meanings")
#keep in mind this records will be classified as end_of_pregnancy so no spontaneous abortion registry should be included
meanings_birth_registry<-c("birth_registry_mother")
########################################################################################################################
#Specify all variables of interest to generate the Lifestyle report
########################################################################################################################
#Variables of interest:Smoking, Folic acid use, Alcohol abuse, BMI, SES
#1.Identify the CDM table you used to save the information about the variables of interest.
#2.Identify the original name of the variable of interest.
#3.Use the information above to complete the list below.
#4.CDM_table:name of the CDM table where you saved the information.
#5.CDM_column: name of the CDM column where you saved the information about the name of the variable of interest.
#6.value: name of the original variable.
#7.c.voc: name of the CDM column where you saved the vocabulary representing the variable of interest.If no vocabulary fill NULL
#8.v.voc: the vocabulary used for the variable of interest.If no vocabulary fill NULL
#9.v.date: name of the CDM column which saves the date of recording.
#10.If you don't have information about a variable then delete that section and use Lifestyle <- list()
#example BMI(saved in MEDICAL_OBSERVATIONS, original name: body_mass_index, unit:kg/m2)
#  BMI = list(
#    CDM_table = "MEDICAL_OBSERVATIONS",
#    CDM_column = "mo_source_column",
#    value = "body_mass_index",
#    c.voc = "mo_record_vocabulary",
#    v.voc = "ICD9",
#    v.date = "mo_date"
#  )
#Smoking = list(
#  CDM_table = "SURVEY_OBSERVATIONS",
#  CDM_column = "so_source_column",
#  value = c("SMOKING","SMOKESEV"),
#  c.voc = NULL,
#  v.voc = NULL,
#  v.date = "so_date"
#)
Lifestyle <- list()
# Lifestyle <- list(
#   Smoking = list(
#     CDM_table = "",
#     CDM_column = "",
#     value = "",
#     c.voc = "",
#     v.voc = "",
#     v.date = ""
#   ),
#   Folic_acid = list(
#     CDM_table = "",
#     CDM_column = "",
#     value = "",
#     c.voc = "",
#     v.voc = "",
#     v.date = ""
#   ),
#   Alcohol = list(
#     CDM_table = "",
#     CDM_column = "",
#     value = "",
#     c.voc = "",
#     v.voc = "",
#     v.date = ""
#   ),
#   BMI = list(
#     CDM_table = "",
#     CDM_column = "",
#     value = c(""),
#     c.voc = "" ,
#     v.voc = "",
#     v.date = ""
#   ),
#   SES = list(
#     CDM_table = "",
#     CDM_column = "",
#     value = c(""),
#     c.voc = "" ,
#     v.voc = "",
#     v.date = ""
#   )
# )
###############################################
source("packages.R")
source("99_path.R")
source(paste0(pre_dir, "info.R"))
source(paste0(pre_dir,"study_parameters.R"))
setwd(projectFolder)
#################################################
#Study_source_population
#################################################
system.time(source(paste0(pre_dir,"study_source_population_script.R")))
#Create report
for(i in readRDS(paste0(std_pop_tmp,"SCHEME_06.rds"))[["subpopulations"]]){
if(SUBP) {
report_dir1 <- paste0(std_source_pop_dir,i)
report_dir2 <- paste0(std_source_pop_dir,i,"/Masked")
}else{
report_dir1 <- substr(std_source_pop_dir,1,nchar(std_source_pop_dir)-1)
report_dir2 <- paste0(std_source_pop_dir,"Masked")
}
rmarkdown::render(paste0(pre_dir,"Report_01_StudyPopulation.Rmd"),
output_file = paste0(report_dir1,"/","Report_01_Study_population_",i,".html"),
output_dir = report_dir1
)
rmarkdown::render(paste0(pre_dir,"Report_02_Dates.Rmd"),
output_file = paste0(report_dir1,"/","Report_02_Dates_",i,".html"),
output_dir = report_dir1
)
rmarkdown::render(paste0(pre_dir,"Report_03_VisitsLifestyle.Rmd"),
output_file = paste0(report_dir1,"/","Report_03_VisitsLifestyle_",i,".html"),
output_dir = report_dir1
)
rm(report_dir1,report_dir2)
}
#Create report
for(i in readRDS(paste0(std_pop_tmp,"SCHEME_06.rds"))[["subpopulations"]]){
if(SUBP) {
report_dir1 <- paste0(std_source_pop_dir,i)
report_dir2 <- paste0(std_source_pop_dir,i,"/Masked")
}else{
report_dir1 <- substr(std_source_pop_dir,1,nchar(std_source_pop_dir)-1)
report_dir2 <- paste0(std_source_pop_dir,"Masked")
}
rmarkdown::render(paste0(pre_dir,"Report_01_StudyPopulation.Rmd"),
output_file = paste0(report_dir1,"/","Report_01_Study_population_",i,".html"),
output_dir = report_dir1
)
rmarkdown::render(paste0(pre_dir,"Report_02_Dates.Rmd"),
output_file = paste0(report_dir1,"/","Report_02_Dates_",i,".html"),
output_dir = report_dir1
)
rmarkdown::render(paste0(pre_dir,"Report_03_VisitsLifestyle.Rmd"),
output_file = paste0(report_dir1,"/","Report_03_VisitsLifestyle_",i,".html"),
output_dir = report_dir1
)
rm(report_dir1,report_dir2)
}
